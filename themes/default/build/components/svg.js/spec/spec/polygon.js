describe("Polygon",function(){var e;beforeEach(function(){e=draw.polygon("0,0 100,0 100,100 0,100")}),afterEach(function(){draw.clear()}),describe("x()",function(){it("should return the value of x without an argument",function(){expect(e.x()).toBe(0)}),it("should set the value of x with the first argument",function(){e.x(123);var t=e.bbox();expect(t.x).toBe(123)})}),describe("y()",function(){it("should return the value of y without an argument",function(){expect(e.y()).toBe(0)}),it("should set the value of y with the first argument",function(){e.y(345);var t=e.bbox();expect(t.y).toBe(345)})}),describe("cx()",function(){it("should return the value of cx without an argument",function(){expect(e.cx()).toBe(50)}),it("should set the value of cx with the first argument",function(){e.cx(123);var t=e.bbox();expect(t.cx).toBe(123)})}),describe("cy()",function(){it("should return the value of cy without an argument",function(){expect(e.cy()).toBe(50)}),it("should set the value of cy with the first argument",function(){e.cy(345);var t=e.bbox();expect(t.cy).toBe(345)})}),describe("move()",function(){it("should set the x and y position",function(){e.move(123,456);var t=e.bbox();expect(t.x).toBe(123),expect(t.y).toBe(456)})}),describe("center()",function(){it("should set the cx and cy position",function(){e.center(321,567);var t=e.bbox();expect(t.x).toBe(271),expect(t.y).toBe(517)})}),describe("size()",function(){it("should define the width and height of the element",function(){e.size(987,654);var t=e.bbox();expect(approximately(t.width,.1)).toBe(987),expect(approximately(t.height,.1)).toBe(654)})}),describe("scale()",function(){it("should scale the element universally with one argument",function(){var t=e.bbox(),n=e.scale(2).bbox();expect(n.width).toBe(t.width*2),expect(n.height).toBe(t.height*2)}),it("should scale the element over individual x and y axes with two arguments",function(){var t=e.bbox(),n=e.scale(2,3.5).bbox();expect(n.width).toBe(t.width*2),expect(n.height).toBe(t.height*3.5)})}),describe("translate()",function(){it("should set the translation of an element",function(){e.transform({x:12,y:12}),expect(e.node.getAttribute("transform")).toBe("translate(12 12)")})})});