describe("Arrange",function(){var e,t,n;beforeEach(function(){draw.clear(),e=draw.rect(100,100).move(10,10).attr("id","e1"),t=draw.ellipse(100,100).move(20,20).attr("id","e2"),n=draw.line(0,0,100,100).move(30,30).attr("id","e3")}),describe("siblings()",function(){it("returns all siblings of targeted element",function(){expect(e.siblings().length).toBe(3),expect([e,t,n]).toEqual(t.siblings())})}),describe("position()",function(){it("returns the index position within it's parent",function(){expect(e.siblings().length).toBe(3),expect(e.position()).toBe(0),expect(t.position()).toBe(1),expect(n.position()).toBe(2)})}),describe("next()",function(){it("returns the next sibling within the parent element",function(){expect(e.next()).toBe(t),expect(t.next()).toBe(n),expect(n.next()).toBe(undefined)})}),describe("previous()",function(){it("returns the previous sibling within the parent element",function(){expect(e.previous()).toBe(undefined),expect(t.previous()).toBe(e),expect(n.previous()).toBe(t)})}),describe("forward()",function(){it("returns the element itself",function(){expect(e.forward()).toBe(e)}),it("moves the element one step forward within its parent",function(){e.forward(),expect(e.position()).toBe(1),expect(t.position()).toBe(0),expect(n.position()).toBe(2)}),it("keeps the last element at the same position",function(){n.forward(),expect(n.position()).toBe(2)}),it("keeps the defs on top of the stack",function(){n.forward(),expect(draw.node.childNodes[2]).toBe(n.node),expect(draw.node.childNodes[3]).toBe(draw.defs().node)})}),describe("backward()",function(){it("returns the element itself",function(){expect(e.backward()).toBe(e)}),it("moves the element one step backwards within its parent",function(){n.backward(),expect(e.position()).toBe(0),expect(t.position()).toBe(2),expect(n.position()).toBe(1)}),it("keeps the first element at the same position",function(){n.backward(),expect(e.position()).toBe(0)})}),describe("front()",function(){it("returns the element itself",function(){expect(n.front()).toBe(n)}),it("moves the element to the top of the stack within its parent",function(){e.front(),expect(e.position()).toBe(2),expect(t.position()).toBe(0),expect(n.position()).toBe(1)}),it("keeps the last element at the same position",function(){n.front(),expect(n.position()).toBe(2)}),it("keeps the defs on top of the stack",function(){e.front(),expect(draw.node.childNodes[2]).toBe(e.node),expect(draw.node.childNodes[3]).toBe(draw.defs().node)})}),describe("back()",function(){it("returns the element itself",function(){expect(n.back()).toBe(n)}),it("moves the element to the bottom of the stack within its parent",function(){n.back(),expect(e.position()).toBe(1),expect(t.position()).toBe(2),expect(n.position()).toBe(0)}),it("keeps the first element at the same position",function(){e.back(),expect(e.position()).toBe(0)})}),describe("before()",function(){it("returns the targeted element itself",function(){expect(n.before(e)).toBe(n)}),it("inserts a given element before the targeted element",function(){n.before(e),expect(e.position()).toBe(1),expect(t.position()).toBe(0),expect(n.position()).toBe(2)}),it("moves elements between containers",function(){var r=draw.group(),i=r.rect(80,120),s=r.rect(80,120),o=r.rect(80,120);t.before(s),expect(e.position()).toBe(0),expect(t.position()).toBe(2),expect(n.position()).toBe(3),expect(s.position()).toBe(1)})}),describe("after()",function(){it("returns the targeted element itself",function(){expect(n.after(e)).toBe(n)}),it("inserts a given element after the targeted element",function(){n.after(e),expect(e.position()).toBe(2),expect(t.position()).toBe(0),expect(n.position()).toBe(1)}),it("moves elements between containers",function(){var r=draw.group(),i=r.rect(80,120),s=r.rect(80,120),o=r.rect(80,120);t.after(s),expect(e.position()).toBe(0),expect(t.position()).toBe(1),expect(n.position()).toBe(3),expect(s.position()).toBe(2)})})});